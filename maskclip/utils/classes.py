"""Class names for datasets."""

from typing import List


def voc_classes():
    """Pascal-VOC classes."""
    return [
        "airplane",
        "bicycle",
        "bird",
        "boat",
        "bottle",
        "bus",
        "car",
        "cat",
        "chair",
        "cow",
        "dining table",
        "dog",
        "horse",
        "motorbike",
        "person",
        "potted plant",
        "sheep",
        "sofa",
        "train",
        "tv monitor",
    ]


def context_classes():
    """Pascal-Context classes."""
    return [
        "background",
        "airplane",
        "bag",
        "bed",
        "bedclothes",
        "bench",
        "bicycle",
        "bird",
        "boat",
        "book",
        "bottle",
        "building",
        "bus",
        "cabinet",
        "car",
        "cat",
        "ceiling",
        "chair",
        "cloth",
        "computer",
        "cow",
        "cup",
        "curtain",
        "dog",
        "door",
        "fence",
        "floor",
        "flower",
        "food",
        "grass",
        "ground",
        "horse",
        "keyboard",
        "light",
        "motorbike",
        "mountain",
        "mouse",
        "person",
        "plate",
        "platform",
        "potted plant",
        "road",
        "rock",
        "sheep",
        "shelves",
        "sidewalk",
        "sign",
        "sky",
        "snow",
        "sofa",
        "table",
        "track",
        "train",
        "tree",
        "truck",
        "tv monitor",
        "wall",
        "water",
        "window",
        "wood",
    ]


def stuff_classes():
    """COCO-Stuff classes."""
    return [
        "person",
        "bicycle",
        "car",
        "motorcycle",
        "airplane",
        "bus",
        "train",
        "truck",
        "boat",
        "traffic light",
        "fire hydrant",
        "stop sign",
        "parking meter",
        "bench",
        "bird",
        "cat",
        "dog",
        "horse",
        "sheep",
        "cow",
        "elephant",
        "bear",
        "zebra",
        "giraffe",
        "backpack",
        "umbrella",
        "handbag",
        "tie",
        "suitcase",
        "frisbee",
        "skis",
        "snowboard",
        "sports ball",
        "kite",
        "baseball bat",
        "baseball glove",
        "skateboard",
        "surfboard",
        "tennis racket",
        "bottle",
        "wine glass",
        "cup",
        "fork",
        "knife",
        "spoon",
        "bowl",
        "banana",
        "apple",
        "sandwich",
        "orange",
        "broccoli",
        "carrot",
        "hot dog",
        "pizza",
        "donut",
        "cake",
        "chair",
        "couch",
        "potted plant",
        "bed",
        "dining table",
        "toilet",
        "tv",
        "laptop",
        "mouse",
        "remote",
        "keyboard",
        "cell phone",
        "microwave",
        "oven",
        "toaster",
        "sink",
        "refrigerator",
        "book",
        "clock",
        "vase",
        "scissors",
        "teddy bear",
        "hair drier",
        "toothbrush",
        "banner",
        "blanket",
        "branch",
        "bridge",
        "building",
        "bush",
        "cabinet",
        "cage",
        "cardboard",
        "carpet",
        "ceiling",
        "tile ceiling",
        "cloth",
        "clothes",
        "clouds",
        "counter",
        "cupboard",
        "curtain",
        "desk",
        "dirt",
        "door",
        "fence",
        "marble floor",
        "floor",
        "stone floor",
        "tile floor",
        "wood floor",
        "flower",
        "fog",
        "food",
        "fruit",
        "furniture",
        "grass",
        "gravel",
        "ground",
        "hill",
        "house",
        "leaves",
        "light",
        "mat",
        "metal",
        "mirror",
        "moss",
        "mountain",
        "mud",
        "napkin",
        "net",
        "paper",
        "pavement",
        "pillow",
        "plant",
        "plastic",
        "platform",
        "playingfield",
        "railing",
        "railroad",
        "river",
        "road",
        "rock",
        "roof",
        "rug",
        "salad",
        "sand",
        "sea",
        "shelf",
        "sky",
        "skyscraper",
        "snow",
        "solid",
        "stairs",
        "stone",
        "straw",
        "structural",
        "table",
        "tent",
        "textile",
        "towel",
        "tree",
        "vegetable",
        "brick wall",
        "concrete wall",
        "wall",
        "panel wall",
        "stone wall",
        "tile wall",
        "wood wall",
        "water",
        "waterdrops",
        "blind window",
        "window",
        "wood",
    ]


_DATASETS = {
    "voc": ["voc", "pascal_voc", "pascal-voc"],
    "context": ["context", "pascal_context", "pascal-context"],
    "stuff": ["stuff", "coco_stuff", "coco-stuff"],
}


def available_datasets() -> List[str]:
    """Returns the names of available datasets"""
    return list(_DATASETS.keys())


def get_classes(dataset: str):
    """Get class names of a dataset."""
    alias2name = {}
    for name, aliases in _DATASETS.items():
        for alias in aliases:
            alias2name[alias] = name

    if isinstance(dataset, str):
        if dataset in alias2name:
            labels = eval(alias2name[dataset] + "_classes()")
        else:
            raise ValueError(f"unrecognized dataset: {dataset}")
    else:
        raise TypeError(f"dataset must a str, but got {type(dataset)}")
    return labels
